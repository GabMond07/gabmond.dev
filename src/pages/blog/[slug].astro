---
import Layout from '../../layouts/Layout.astro';
import { getCollection, getEntry } from 'astro:content';
import Nav from '../../components/Nav.astro';
import Footer from '../../components/Footer.astro';

export async function getStaticPaths() {
  const posts = await getCollection('posts');
  return posts.map(post => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

const { post } = Astro.props;
const { Content } = await post.render();
---

<Layout title={post.data.title}>
  <Nav />
  <article class="max-w-3xl mx-auto py-12 px-4">
    <h1 class="text-4xl font-bold text-white mb-6">{post.data.title}</h1>
    <p class="text-sm text-gray-400 mb-4">{post.data.date}</p>
    <div class="w-full h-64 bg-gray-700 rounded-md mb-6 flex items-center justify-center overflow-hidden">
      <img src={post.data.thumbnail || '/placeholder.jpg'} alt={post.data.title} class="w-full h-full object-cover" />
    </div>
    <div class="prose prose-invert max-w-none">
      <Content />
    </div>
    <div class="mt-6 flex space-x-4">
      <span class="text-sm text-green-400">{post.data.readTime || '10'} min read</span>
      <span class="text-sm text-green-400">{post.data.views || Math.floor(Math.random() * 5000)} views</span>
    </div>
    <div class="mt-4 flex space-x-2">
      {post.data.categories?.map(category => (
        <span class="inline-block bg-gray-700 text-white text-sm px-3 py-1 rounded-full">{category}</span>
      )) || null}
    </div>
  </article>
  <Footer />
</Layout>