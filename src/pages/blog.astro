---
import Layout from '../layouts/Layout.astro';

// Configura tus variables de entorno (en un archivo .env)
const NOTION_TOKEN = import.meta.env.NOTION_TOKEN || 'tu-token-de-integracion';
const DATABASE_ID = import.meta.env.NOTION_DATABASE_ID || 'tu-id-de-base-de-datos';

// Función para obtener datos de Notion
async function fetchBlogPosts() {
  const response = await fetch(`https://api.notion.com/v1/databases/${DATABASE_ID}/query`, {
    method: 'POST',
    headers: {
      'Authorization': `Bearer ${NOTION_TOKEN}`,
      'Notion-Version': '2022-06-28',
      'Content-Type': 'application/json',
    },
  });
  const data = await response.json();
  return data.results.map(post => ({
    title: post.properties.Título?.title[0]?.plain_text || 'Sin título',
    date: post.properties.Fecha?.date?.start || 'Sin fecha',
    preview: post.properties['Vista previa']?.rich_text[0]?.plain_text || 'Sin vista previa',
    categories: post.properties.Categorías?.multi_select?.map(cat => cat.name) || [],
  }));
}

const posts = await fetchBlogPosts();
---

<Layout title="Blog">
  <!-- Encabezado -->
  <header class="bg-gradient-to-r from-green-500 to-teal-500 text-white py-16 text-center">
    <h1 class="text-5xl font-bold">The Blog</h1>
    <p class="mt-2 text-lg">Thoughts, mental models, and tutorials about front-end development.</p>
    <div class="mt-6 flex justify-center">
      <input type="text" placeholder="Search..." class="w-1/2 p-3 rounded-l-md bg-gray-800 text-white border-none focus:outline-none" />
      <button class="bg-gray-700 p-3 rounded-r-md text-white">Shift + S</button>
    </div>
  </header>

  <!-- Lista de publicaciones -->
  <section class="max-w-5xl mx-auto py-12 px-4">
    {posts.map(post => (
      <article class="mb-8 p-6 bg-gray-900 rounded-lg flex">
        <div class="flex-1">
          <p class="text-sm text-gray-400">{post.date}</p>
          <h2 class="text-2xl font-semibold text-white mt-2">{post.title}</h2>
          <p class="text-gray-300 mt-2">{post.preview}</p>
          <div class="mt-4 flex space-x-4">
            <span class="text-sm text-gray-400">10 min read</span>
            <span class="text-sm text-gray-400">{Math.floor(Math.random() * 5000)} views</span>
          </div>
          <div class="mt-4">
            {post.categories.map(category => (
              <span class="inline-block bg-gray-700 text-white text-sm px-3 py-1 rounded-full mr-2">{category}</span>
            ))}
          </div>
        </div>
        <div class="w-48 h-32 bg-gray-700 rounded-md ml-6 flex items-center justify-center">
          <span class="text-gray-400">Thumbnail</span>
        </div>
      </article>
    ))}
  </section>
</Layout>