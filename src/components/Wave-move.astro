---
// --- Frontmatter (opcional para este componente si no pasas props) ---
// Aquí podrías definir props si quisieras, por ejemplo,
// para configurar particles.js desde donde usas el componente.
// Ejemplo:
// const { color = '#8f0898', particleCount = 90 } = Astro.props;
---

<style is:global>
    canvas {
      display: block;
      vertical-align: bottom;
    }
  
    #particles-js {
      position: absolute; /* O fixed, dependiendo de si quieres que se mueva con el scroll */
      width: 100%;
      height: 100%;
      background-color: #430f37;
      background-image: url("");
      background-repeat: no-repeat;
      background-size: cover;
      background-position: 50% 50%;
      top: 0; /* Asegura que se posicione desde la parte superior */
      left: 0; /* Asegura que se posicione desde la parte izquierda */
      z-index: -1; /* Lo envía al fondo para que no interfiera con otros elementos */
    }
  
    /* ---- stats.js ---- */
    /* Estos estilos afectan a elementos que stats.js crea o usa,
       a menudo necesitan ser globales. */
    .count-particles {
      background: #000022;
      position: absolute;
      top: 48px; /* Ajusta según la altura de tu header si tienes uno */
      left: 0;
      width: 80px;
      color: #13e8e9;
      font-size: 0.8em;
      text-align: left;
      text-indent: 4px;
      line-height: 14px;
      padding-bottom: 2px;
      font-family: Helvetica, Arial, sans-serif;
      font-weight: bold;
      z-index: 20; /* Asegura que esté por encima del fondo de partículas */
    }
    .js-count-particles {
      font-size: 1.1em;
    }
    #stats,
    .count-particles {
      -webkit-user-select: none;
      margin-top: 5px;
      margin-left: 5px;
    }
    #stats {
      border-radius: 3px 3px 0 0;
      overflow: hidden;
      z-index: 20; /* Asegura que esté por encima */
    }
    .count-particles {
      border-radius: 0 0 3px 3px;
    }
  </style>
  
  <div id="particles-js"></div>
  <div class="count-particles">
    <span class="js-count-particles">--</span> particles
  </div>
  <script is:inline src="http://cdn.jsdelivr.net/particles.js/2.0.0/particles.min.js"></script>
  <script is:inline src="http://threejs.org/examples/js/libs/stats.min.js"></script>
  
  <script is:inline>
    // --- Tu código original de inicialización de particlesJS y stats.js ---
    particlesJS("particles-js", {
      particles: {
        number: { value: 90, density: { enable: true, value_area: 800 } },
        color: { value: "#8f0898" }, // Puedes hacer esto dinámico con props si quieres
        shape: {
          type: "circle",
          stroke: { width: 0, color: "#000000" },
          polygon: { nb_sides: 5 },
          image: { src: "img/github.svg", width: 100, height: 100 },
        },
        opacity: {
          value: 0.5,
          random: true,
          anim: { enable: false, speed: 1, opacity_min: 0.1, sync: false },
        },
        size: {
          value: 2,
          random: true,
          anim: { enable: false, speed: 40, size_min: 0.1, sync: false },
        },
        line_linked: {
          enable: true,
          distance: 150,
          color: "#794684",
          opacity: 0.5,
          width: 0.5,
        },
        move: {
          enable: true,
          speed: 6,
          direction: "none",
          random: false,
          straight: false,
          out_mode: "out",
          bounce: false,
          attract: { enable: false, rotateX: 600, rotateY: 1200 },
        },
      },
      interactivity: {
        detect_on: "canvas",
        events: {
          onhover: { enable: true, mode: "grab" },
          onclick: { enable: true, mode: "push" },
          resize: true,
        },
        modes: {
          grab: { distance: 97.44926547616143, line_linked: { opacity: 1 } },
          bubble: { distance: 500, size: 50, duration: 1, opacity: 8, speed: 3 },
          repulse: { distance: 200, duration: 0.4 },
          push: { particles_nb: 4 },
          remove: { particles_nb: 2 },
        },
      },
      retina_detect: true,
    });
  
    // --- Código para stats.js y el contador ---
    var count_particles, stats, update;
    stats = new Stats();
    stats.setMode(0);
    stats.domElement.style.position = "absolute";
    stats.domElement.style.left = "0px";
    stats.domElement.style.top = "0px";
  
    // Añadir stats.domElement al body. Asegurarse de que el body exista.
    // Es buena práctica esperar al DOMContentLoaded si el script no está al final del body.
    // Como estamos usando is:inline y el script va después del HTML del componente,
    // el body ya debería existir, pero añadir una comprobación no está de más.
     if (document.body) {
           document.body.appendChild(stats.domElement);
      } else {
        document.addEventListener('DOMContentLoaded', () => {
             document.body.appendChild(stats.domElement);
        });
      }
  
  
    count_particles = document.querySelector(".js-count-particles");
    update = function () {
      stats.begin();
      stats.end();
      // Asegurarse de que pJSDom y sus propiedades existan antes de acceder a ellos
      if (
        window.pJSDom && window.pJSDom[0] && window.pJSDom[0].pJS &&
        window.pJSDom[0].pJS.particles && window.pJSDom[0].pJS.particles.array
      ) {
        count_particles.innerText = window.pJSDom[0].pJS.particles.array.length;
      }
      requestAnimationFrame(update);
    };
    requestAnimationFrame(update);
    // --- Fin del código de inicialización ---
  </script>